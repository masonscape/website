name: Deploy silly.masonscape.com

on:
  push:
    paths:
      # only re-build if the "silly" app actually changed
      - apps/silly/**
      # or if its workflow (this file) changed
      - .github/workflows/silly.yaml
      # or package.json changes
      - package.json

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          
      # Build Docker image locally
      - name: Build Docker image
        run: pnpm run build-silly
          
      # Save the built image to a tarball
      - name: Save Docker image
        run: docker save -o silly-masonscape.tar silly-masonscape
          
      # Configure SSH connection
      - name: Configure SSH connection
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -t rsa ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.SSH_KEY }}"
          
      # Transfer the image to the droplet and load it
      - name: Transfer and load Docker image
        run: |
          scp -P ${{ secrets.SSH_PORT }} silly-masonscape.tar ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/silly-masonscape.tar
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker load -i /tmp/silly-masonscape.tar && rm /tmp/silly-masonscape.tar"
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          
      # Deploy the container on the droplet
      - name: Deploy container
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            "docker stop silly-masonscape || true; \
             docker container rm silly-masonscape || true; \
             docker run --name silly-masonscape -d -p 8080:80 silly-masonscape"
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock